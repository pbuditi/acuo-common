apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/root/buildscript.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/root/gradle-wrapper.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/root/profiles-config.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/root/deployment.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/root/test-reports.gradle"

apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/java/java-plugins.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/java/dependencies.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/java/integration-test.gradle"
apply from: "https://raw.githubusercontent.com/anaxo-io/gradle-plugins/master/java/sonarqube.gradle"

group = 'com.acuo.collateral'

ext.versions += [
        model        : '0.1.0-SNAPSHOT'
]

dependencies {
    implementation(
            "com.acuo.collateral:acuo-model:${versions.model}"
    ) { changing = true }

    implementation(
            "org.eclipse.jetty:jetty-servlet:${versions.jetty_servlet}"
    )

    implementation (
            "org.jboss.resteasy:resteasy-jaxrs:${versions.resteasy}",
            "org.jboss.resteasy:resteasy-guice:${versions.resteasy}",
    )

    implementation(
            "com.hazelcast:hazelcast:${versions.hazelcast}"
    )

    implementation(
            "com.google.inject:guice:${versions.guice}",
            "com.google.inject.extensions:guice-multibindings:${versions.guice}",
            "com.google.inject.extensions:guice-servlet:${versions.guice}",
            "com.google.inject.extensions:guice-assistedinject:${versions.guice}",
            "com.smokejumperit.guice:core:${versions.smokejumperit}",
            "com.mycila.guice.extensions:mycila-guice-jsr250:4.0.rc1",
            "com.mycila.guice.extensions:mycila-guice-closeable:4.0.rc1"
    )

    implementation(
            "io.dropwizard.metrics:metrics-core:${versions.metrics}",
            "io.dropwizard.metrics:metrics-healthchecks:${versions.metrics}",
            "io.dropwizard.metrics:metrics-jvm:${versions.metrics}",
            "io.dropwizard.metrics:metrics-servlets:${versions.metrics}",
            "io.dropwizard.metrics:metrics-annotation:${versions.metrics}",
            "com.palominolabs.metrics:metrics-guice:${versions.metricsguice}"
    )

    implementation(
            "com.squareup.okhttp3:okhttp:${versions.okhttp}",
            "org.jasypt:jasypt:${versions.jasypt}",
            "com.thetransactioncompany:cors-filter:${versions.cors_filter}",
            "com.google.code.findbugs:jsr305:3.0.1",
            "ch.qos.logback:logback-access:${versions.logback}",
            "org.eclipse.persistence:eclipselink:${versions.eclipselink}"
    )

    implementation(
            "javax.servlet:javax.servlet-api:3.1.0",
            "javax.annotation:javax.annotation-api:1.2"
    )

    implementation("org.slf4j:jul-to-slf4j:${versions.slf4j}")

    testImplementation (
            "com.tngtech.java:junit-dataprovider:${versions.tngtech}",
            "com.squareup.okhttp3:mockwebserver:${versions.okhttp}",
            "org.easymock:easymock:${versions.easymock}",
            "org.slf4j:log4j-over-slf4j:${versions.slf4j}"
    )

    testRuntimeOnly (
            "ch.qos.logback:logback-classic:${versions.logback}",
            "ch.qos.logback:logback-access:${versions.logback}",
            "org.slf4j:log4j-over-slf4j:${versions.slf4j}",
            "org.slf4j:jcl-over-slf4j:${versions.slf4j}",
            "org.slf4j:jul-to-slf4j:${versions.slf4j}"
    )
}
